"""decode.py"""
from __future__ import annotations
import re
from sys import exit as sys_exit
from time import sleep
from binascii import unhexlify
import requests
from urllib3 import disable_warnings

disable_warnings()

URL = "https://3.144.231.151:42424/"
sess = requests.Session()
csrf = sess.get(URL, verify=False)
data = {
    "_csrf_token": csrf.cookies["_csrf_token"],
    "length": 1,
    "width": 1,
    "depth": 1,
    "units": "ft"
}
res = sess.post(f"{URL}calculate/square_slab",
                data=data,
                headers={"Referer": URL},
                timeout=60,
                verify=False)
START = "Requires "
END = " cubic"
TEXT = res.text
flag_int = re.findall(fr'(?:{START})([\r\s\S]*?)(?:{END})', TEXT)[0]


def decode_flag(string: str) -> str:
    """Decode flag integer."""
    flag_hex_bytes = hex(int(string)).encode()
    return unhexlify(flag_hex_bytes[2:]).decode()


if __name__ == "__main__":
    ATTEMPTS = 1
    try:
        while ATTEMPTS <= 2:
            try:
                print("\nFLAG: " + decode_flag(flag_int))
                sys_exit()
            except ValueError:
                if ATTEMPTS == 1:
                    print("\nCould not decode, trying again in 60 seconds.")
                    sleep(60)
                else:
                    print("\nCould not decode, exiting program.")
            ATTEMPTS += 1
    except KeyboardInterrupt:
        print("\nExiting program.")
        sys_exit()
